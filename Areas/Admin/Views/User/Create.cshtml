@model ProjectShoeShop.ViewModel.RegisterVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayoutPage1.cshtml";

}

<style>
.account-settings .user-profile {
    margin: 0 0 1rem 0;
    padding-bottom: 1rem;
    text-align: center;
}

    .account-settings .user-profile .user-avatar {
        margin: 0 0 1rem 0;
    }

        .account-settings .user-profile .user-avatar img {
            width: 90px;
            height: 90px;
            -webkit-border-radius: 100px;
            -moz-border-radius: 100px;
            border-radius: 100px;
        }

    .account-settings .user-profile h5.user-name {
        margin: 0 0 0.5rem 0;
    }

    .account-settings .user-profile h6.user-email {
        margin: 0;
        font-size: 0.8rem;
        font-weight: 400;
        color: #9fa8b9;
    }

.account-settings .about {
    margin: 2rem 0 0 0;
    text-align: center;
}

    .account-settings .about h5 {
        margin: 0 0 15px 0;
        color: #007ae1;
    }

    .account-settings .about p {
        font-size: 0.825rem;
    }
    #ImagePath {
        width: 217px;
    }
</style>

<h2 class="title-page">Users / @ViewBag.Title</h2>
@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <section class="vh-130">
        <div class="mask d-flex align-items-center h-100">
            <div class="container" style="margin-top: 50px; margin-bottom: 50px">
                <div class="row d-flex justify-content-center align-items-center h-100">
                    <div class="col-12 d-flex  w-100">

                        <div class="card" style="border-radius: 15px; width: 35%;">
                            <div class="card-body">
                                <div class="account-settings">
                                    <div class="user-profile">
                                        <div class="user-avatar">
                                            <img id="image-preview" src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar image">
                                        </div>
                                        <h5 class="user-name">Hello User</h5>
                                        <h6 class="user-email">user@gmail.com</h6>
                                    </div>
                                    <div class="about">
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.ImagePath, new { type = "file", onchange = "previewImage(event)" })
                                                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card w-100 ms-5 ml-5" style="border-radius: 15px;">
                            <div class="card-body p-5">
                                <h2 class="text-uppercase text-center mb-5">Create an account</h2>

                                <div class="form-section">
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        <hr style="margin-bottom: 10px" />
                                        <p class="text-danger">@ViewBag.Message</p>
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="row">
                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                                    @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group col">
                                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group mt-5">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Create" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                    <div style="margin-left: 16px">
                                        @Html.ActionLink("Back to List", "ShowUsers")
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<script>
    function previewImage(event) {
        const input = event.target;

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                const imagePreview = document.getElementById('image-preview');
                imagePreview.src = e.target.result;
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>