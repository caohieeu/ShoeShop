@model ProjectShoeShop.ViewModel.RegisterVM

@{
    ViewBag.Title = "Information";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">


    <title>Information</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style type="text/css">
        .btn {
            background-color: #dbcc8f;
            border: 1px solid #dbcc8f;
        }

        body {
            margin-top: 20px;
            background-color: #f2f6fc;
            color: #69707a;
        }

        .img-account-profile {
            height: 10rem;
        }

        .rounded-circle {
            border-radius: 50% !important;
        }

        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
        }

            .card .card-header {
                font-weight: 500;
            }

        .card-header:first-child {
            border-radius: 0.35rem 0.35rem 0 0;
        }

        .card-header {
            padding: 1rem 1.35rem;
            margin-bottom: 0;
            background-color: rgba(33, 40, 50, 0.03);
            border-bottom: 1px solid rgba(33, 40, 50, 0.125);
        }

        .form-control, .dataTable-input {
            display: block;
            width: 100%;
            padding: 0.875rem 1.125rem;
            font-size: 0.875rem;
            font-weight: 400;
            line-height: 1;
            color: #69707a;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #c5ccd6;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            border-radius: 0.35rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .nav-borders .nav-link.active {
            color: #0061f2;
            border-bottom-color: #0061f2;
        }

        .nav-borders .nav-link {
            color: #69707a;
            border-bottom-width: 0.125rem;
            border-bottom-style: solid;
            border-bottom-color: transparent;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            padding-left: 0;
            padding-right: 0;
            margin-left: 1rem;
            margin-right: 1rem;
        }

        .btn-danger-soft {
            color: #000;
            background-color: #f1e0e3;
            border-color: #f1e0e3;
        }
    </style>
</head>
<body>
    <div class="container-xl px-4 mt-4">
        <a style="text-decoration: none" href="/Home/Index"><i class="fa-solid fa-arrow-left-long" style="font-size: 30px"></i></a>
        <nav class="nav nav-borders">
            <a class="nav-link active ms-0" href="/Account/Information">Profile</a>
            <a class="nav-link" href="/Account/Ordered">Ordered</a>
        </nav>
        <hr class="mt-0 mb-4">
        @using (Html.BeginForm("Information", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="col-xl-4">
                    <div class="card mb-4 mb-xl-0">
                        <div class="card-header">Profile Picture</div>
                        <div class="card-body text-center">

                            @if (ViewBag.currentImg != null)
                            {
                                <img id="image-preview" class="img-account-profile rounded-circle mb-2" src="@ViewBag.currentImg" alt="avatar image">
                            }
                            else
                            {
                                <img id="image-preview" class="img-account-profile rounded-circle mb-2" src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar image">
                            }
                            @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                            <div class="small font-italic text-muted mb-4">JPG or PNG no larger than 5 MB</div>
                            @if (ViewBag.currentImg != null)
                            {
                                @Html.TextBoxFor(model => model.ImagePath, new { @class = "btn", value = ViewBag.currentImg, type = "file", onchange = "previewImage(event)" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.ImagePath, new { @class = "btn", type = "file", onchange = "previewImage(event)" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-xl-8">
                    @Html.AntiForgeryToken()

                    <div class="card mb-4">
                        <div class="card-header">Account Details</div>
                        <div class="card-body">
                            <p class="text-danger">@ViewBag.Message</p>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="mb-3">
                                <label class="small mb-1" for="UserName">Username (how your name will appear to other users on the site)</label>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control small mb-1", placeholder = "Enter your username" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>

                            <div class="row gx-3 mb-3">
                                <div class="col-md-6">
                                    <label class="small mb-1" for="FullName">Full name</label>
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your full name" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <label class="small mb-1" for="Password">Password</label>
                                    <input class="form-control" type="password" name="Password" value="@Model.Password" disabled: disabled />
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    <a style="text-decoration: none" href="/Account/ChangePassword">Change password</a>
                                </div>
                            </div>

                            <div class="row gx-3 mb-3">

                                <div class="col-md-6">
                                    <label class="small mb-1" for="Email">Email address</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your email address" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6">
                                    <label class="small mb-1" for="Address">Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your Address" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row gx-3 mb-3">

                                <div class="col-md-6">
                                    <label class="small mb-1" for="Phone">Phone number</label>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your phone number" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6">
                                    <label class="small mb-1" for="Birth">Birthday</label>
                                    @Html.TextBoxFor(m => m.Birth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", placeholder = "Enter your birthday" })
                                    @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
                                </div>

                                <input type="password" style="visibility: hidden" name="ConfirmPassword" value="@Model.Password" />
                            </div>
                            <button class="btn btn-primary" type="submit">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function previewImage(event) {
            const input = event.target;

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    const imagePreview = document.getElementById('image-preview');
                    imagePreview.src = e.target.result;
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    <script type="text/javascript">

    </script>
</body>
</html>